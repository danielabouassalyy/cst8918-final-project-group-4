name: app-test
on:
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'k8s/**'
      - '.github/workflows/deploy-test.yml'

jobs:
  build-and-deploy-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Who am I (sanity)
        run: az account show -o table

      - name: Build image in ACR
        run: |
          az acr build -r ${{ secrets.ACR_NAME }} \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} app

      # optional debug (remove once green)
      - name: Show my role on AKS (debug)
        run: |
          AKS_ID=$(az aks show -g "${{ secrets.AZURE_RESOURCE_GROUP }}" -n "${{ secrets.AKS_TEST_CLUSTER }}" --query id -o tsv)
          az role assignment list --assignee "${{ secrets.AZURE_CLIENT_ID }}" --scope "$AKS_ID" -o table

      - name: Set AKS context (test, user creds)
        run: |
          az aks get-credentials \
            -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
            -n ${{ secrets.AKS_TEST_CLUSTER }} \
            --overwrite-existing
          kubectl cluster-info

      - name: Deploy to test
        run: |
          kubectl apply -f k8s/weather-app.yaml
          kubectl set image deploy/weather-app \
            weather-app=${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} --record
          kubectl rollout status deploy/weather-app --timeout=180s
