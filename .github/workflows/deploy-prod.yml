name: app-prod
on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'k8s/**'
      - '.github/workflows/deploy-prod.yml'

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy-prod:
    # ❌ was: if: ${{ secrets.AKS_PROD_CLUSTER != '' }}
    env:
      AKS_PROD_CLUSTER: ${{ secrets.AKS_PROD_CLUSTER }}   # map secret to env
    if: ${{ env.AKS_PROD_CLUSTER != '' }}                 # ✅ use env in job-level if
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build image in ACR
        run: |
          az acr build -r ${{ secrets.ACR_NAME }} \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} app

      - name: Set AKS context (prod)
        run: |
          az aks get-credentials -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
            -n ${{ env.AKS_PROD_CLUSTER }} --overwrite-existing

      - name: Deploy to prod
        run: |
          kubectl apply -f k8s/weather-app.yaml
          kubectl set image deploy/weather-app \
            weather-app=${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} --record
          kubectl rollout status deploy/weather-app --timeout=180s
